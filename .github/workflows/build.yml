name: Release

on:
  push:
    tag:
    - v*

jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    timeout-minutes: 15
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: "Checkout Project"
        uses: actions/checkout@v2

      - name: "Select Xcode 13.2"
        uses: devbotsxyz/xcode-select@v1
        with:
          version: "13.2"

      - name: "Build"
        uses: devbotsxyz/xcode-build@v1

      # - run: mkdir out && cp /Users/runner/Export/reaper_csurf_integrator.dylib reaper_csurf_integrator.dylib

      - name: Package for Distribution
        run: ditto -V -c -k  "/Users/runner/Export/reaper_csurf_integrator.dylib" "reaper_csurf_integrator.zip"

      # - name: Archive production artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: reaper_csurf_integrator
      #     path: reaper_csurf_integrator.zip
      #     if-no-files-found: error

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     path: reaper_csurf_integrator.zip
      #     name: reaper_csurf_integrator

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          # files: |
          #   reaper_csurf_integrator.zip

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: true
      #     prerelease: false

      # - name: Download All Artifacts
      #   uses: actions/download-artifact@v2

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./reaper_csurf_integrator.zip
          asset_name: reaper_csurf_integrator.zip
          asset_content_type: application/zip
      # - name: Release app
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: Rings.zip
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}